- hosts: localhost
  connection: local
  vars:
    cert_manager_cert_namespace: "cert-manager"

  tasks:
    - include_vars:
        dir: vars/cert_manager

    - include_tasks: tasks/install_prereqs.yml

    - name: Download CustomResourceDefinition for cert-manager
      ansible.builtin.get_url:
        url: https://github.com/jetstack/cert-manager/releases/download/v1.6.1/cert-manager.crds.yaml
#        url: https://raw.githubusercontent.com/jetstack/cert-manager/release-0.9/deploy/manifests/00-crds.yaml
        dest: "{{ cert_manager_custom_resource_definition_path | mandatory }}"
        mode: 0664
        force: yes

    - name: Apply CustomResourceDefinition for cert-manager
      kubernetes.core.k8s:
        src: "{{ cert_manager_custom_resource_definition_path | mandatory }}"
        kubeconfig: "files/k3s-server-01.kube.config"
        kind: CustomResourceDefinition

    - name: Add jetsack helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Helm install cert-manager
      kubernetes.core.helm:
        kubeconfig: "{{ kube_config_path | mandatory }}"
        name: cert-manager
        release_namespace: cert-manager
        chart_version: v1.6.1
        chart_ref: jetstack/cert-manager
        create_namespace: yes 
        update_repo_cache: yes

    - name: Create certificates namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ cert_manager_cert_namespace }}"

    - name: Create self-signed cluster issuer
      kubernetes.core.k8s:
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned-cluster-issuer
            namespace: "{{ cert_manager_cert_namespace }}"
          spec:
            selfSigned: {}

    - name: Create self-signed certificate
      kubernetes.core.k8s:
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: k3s.home-ca
            namespace: "{{ cert_manager_cert_namespace }}"
          spec:
            secretName: k3s.home-ca-secret
            secretTemplate:
              annotations:
                kubed.appscode.com/sync: ""
            dnsNames:
              - "*.k3s.home"
              - "*.harbor.svc.cluster.local"
              - "*.harbor"
            usages:
              - server auth
              - client aurh
            issuerRef:
              name: selfsigned-cluster-issuer
              kind: ClusterIssuer
            isCA: true            

    - name: Create self-signed cluster issuer
      kubernetes.core.k8s:
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: tls-issuer
            namespace: "{{ cert_manager_cert_namespace }}"
          spec:
            ca:
              secretName: k3s.home-ca-secret

      
    - name: Create self-signed certificate
      kubernetes.core.k8s:
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: k3s.home-cert
            namespace: "{{ cert_manager_cert_namespace }}"
          spec:
            secretName: k3s.home-cert-secret
            secretTemplate:
              annotations:
                kubed.appscode.com/sync: ""
            dnsNames:
              - "*.k3s.home"
              - "*.harbor.svc.cluster.local"
              - "*.harbor"
            usages:
              - server auth
              - client aurh
            issuerRef:
              name: tls-issuer
              kind: ClusterIssuer
            isCA: false        

