- include_playbook: install_cert_manager.yml

- hosts: localhost
  connection: local
  tasks:
    - name: Include rancher vars
      include_vars:
        dir: vars/rancher

    - include_tasks: tasks/kubectl_prereqs.yml
    - include_tasks: tasks/helm_prereqs.yml

    - name: Add a repository
      kubernetes.core.helm_repository:
        name: rancher-stable
        repo_url: https://releases.rancher.com/server-charts/stable

    - name: Download CustomResourceDefinition for cert-manager
      ansible.builtin.get_url:
        url: https://github.com/jetstack/cert-manager/releases/download/v1.6.1/cert-manager.crds.yaml
#        url: https://raw.githubusercontent.com/jetstack/cert-manager/release-0.9/deploy/manifests/00-crds.yaml
        dest: "{{ cert_manager_custom_resource_definition_path | mandatory }}"
        mode: 0664
        force: yes

    - name: Apply CustomResourceDefinition for cert-manager
      kubernetes.core.k8s:
        src: "{{ cert_manager_custom_resource_definition_path | mandatory }}"
        kubeconfig: "files/k3s-server-01.kube.config"
        kind: CustomResourceDefinition

    - name: Add jetsack helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Helm install cert-manager
      kubernetes.core.helm:
        kubeconfig: "{{ kube_config_path | mandatory }}"
        name: cert-manager
        release_namespace: cert-manager
        chart_version: v1.6.1
        chart_ref: jetstack/cert-manager
        create_namespace: yes 
        update_repo_cache: yes

    - name: Install block in case of error
      block:
        - name: Install rancher using helm
          kubernetes.core.helm:
            kubeconfig: "{{ kube_config_path | mandatory }}"
            name: rancher
            release_namespace: "{{ rancher_namespace | default('cattle-system') }}"
            create_namespace: yes 
            chart_ref: rancher-stable/rancher
            release_values: 
              hostname: "{{ rancher_hostname | mandatory }}"      
          register: rancher_install_result

      rescue:
        - name: Try installing rancher again if waiting for uninstall
          vars: 
            wait_for_uninstall_string: 'forbidden: unable to create new content in namespace {{ rancher_namespace | default("cattle-system") }} because it is being terminated'
          until: "wait_for_uninstall_string not in rancher_install_result.stderr"
          retries: 20
          delay: 15
          kubernetes.core.helm:
            kubeconfig: "{{ kube_config_path | mandatory }}"
            name: rancher
            release_namespace: "{{ rancher_namespace | default('cattle-system') }}"
            create_namespace: yes 
            chart_ref: rancher-stable/rancher
            release_values: 
              hostname: "{{ rancher_hostname | mandatory }}"
              bootstrapPassword: "{{ rancher_bootstrap_password }}"
            force: yes
          register: rancher_install_result

    - debug:
        msg: |
          Installation complete!
          Rancher should be available at: '{{ rancher_hostname }}' once rollout is finished.

          Run the following to check rollout status:
          kubectl -n cattle-system rollout status deploy/rancher
      when: not rancher_install_result.failed

#    - name: Install helm-diff plugin
#      kubernetes.core.helm_plugin:
#        plugin_path: "{{ helm_diff_url }}"
#        state: present

    - name: Install system-tools
      become: yes
      ansible.builtin.get_url:
        url: "{{ system_tools_url }}"
        dest: /usr/local/bin/system-tools
        mode: 0755
